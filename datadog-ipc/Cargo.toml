[package]
edition = "2021"
name = "datadog-ipc"
version = "0.1.0"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
anyhow = { version = "1.0" }
bytes = { version = "1.4" }
futures = { version = "0.3", default-features = false }
io-lifetimes = { version = "1.0" }
page_size = "0.6.0"
pin-project = { version = "1" }
memfd = { version = "0.6" }
serde = { version = "1.0", default-features = false, features = ["derive"] }
tokio-serde = { version = "0.8", features = ["bincode"] }
tokio-util = { version = "0.7.11", features = ["codec"] }
libc = { version = "0.2" }
tinybytes = { path = "../tinybytes", optional = true }

# tarpc needed extensions to allow 1 way communication and to export some internal structs
tarpc = { path = "./tarpc", default-features = false, features = ["serde-transport"] }

ddcommon = { version = "1.0.0", path = "../libdd-common", package = "libdd-common" }
datadog-ipc-macros = { path = "../datadog-ipc-macros" }

[dev-dependencies]
criterion = "0.5"
pretty_assertions = "1.3"
tempfile = { version = "3.3" }
tokio = { version = "1.23", features = [
    "macros",
    "rt-multi-thread",
    "rt",
    "tracing",
    "fs",
    "io-util",
] }
tracing = { version = "0.1" }
tracing-subscriber = { version = "0.3.11" }
spawn_worker = { path = "../spawn_worker" }

[target.'cfg(not(windows))'.dependencies]
nix = { version = "0.29", features = ["fs", "mman", "process", "poll", "socket"] }
sendfd = { version = "0.4", features = ["tokio"] }
tokio = { version = "1.23", features = ["sync", "io-util", "signal"] }

[target.'cfg(target_env = "gnu")'.build-dependencies]
glibc_version = "0.1.2"

[target.'cfg(windows)'.dependencies]
winapi = { version = "0.3.9", features = ["handleapi", "memoryapi", "winbase", "winerror"] }
windows-sys = { version = "0.48.0", features = ["Win32_System", "Win32_System_WindowsProgramming", "Win32_Foundation", "Win32_System_Pipes"] }
tokio = { version = "1.23", features = ["sync", "io-util", "signal", "net"] }

[lib]
bench = false

[[bench]]
harness = false
name = "ipc"
path = "benches/ipc.rs"

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(polyfill_glibc_memfd)'] }

[features]
tiny-bytes = ["tinybytes"]
