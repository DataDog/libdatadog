[package]
name = "datadog-crashtracker"
authors = ["Daniel Schwartz-Narbonne <dsn@datadoghq.com>"]
description = "Detects program crashes and reports them to datadog backend."
edition.workspace = true
version.workspace = true
rust-version.workspace = true
license.workspace = true

[lib]
crate-type = ["lib"]
bench = false

[[bin]]
name = "crashtracker-receiver"
path = "src/bin/crashtracker_receiver.rs"
bench = false

[features]
default = ["collector", "receiver", "collector_windows"]
# Enables the in-process collection of crash-info
collector = []
# Enables the use of this library to receiver crash-info from a suitable collector
receiver = []
# Enables the collection of crash-info on Windows
collector_windows = []

[target.'cfg(unix)'.dependencies]
# Should be kept in sync with the libdatadog symbolizer crate (also using blasesym)
blazesym = "0.2.0-rc.2"

[dependencies]
anyhow = "1.0"
backtrace = "0.3.74"
chrono = {version = "0.4", default-features = false, features = ["std", "clock", "serde"]}
ddcommon = {path = "../ddcommon"}
ddtelemetry = {path = "../ddtelemetry"}
http = "1.0"
libc = "0.2"
nix = { version = "0.29", features = ["poll", "signal", "socket"] }
num-derive = "0.4.2"
num-traits = "0.2.19"
os_info = "3.7.0"
page_size = "0.6.0"
portable-atomic = { version = "1.6.0", features = ["serde"] }
rand = "0.8.5"
schemars = "0.8.21"
serde = {version = "1.0", features = ["derive"]}
serde_json = {version = "1.0"}
symbolic-demangle = { version = "12.8.0", default-features = false, features = ["rust", "cpp", "msvc"] }
symbolic-common = { version = "12.8.0", default-features = false }
tokio = { version = "1.23", features = ["rt", "macros", "io-std", "io-util"] }
uuid = { version = "1.4.1", features = ["v4", "serde"] }

[target.'cfg(windows)'.dependencies]
windows = { version = "0.59.0", features = ["Win32_System_Diagnostics_Debug", "Win32_System_Diagnostics_ToolHelp", "Win32_System_ErrorReporting", "Win32_System_Kernel", "Win32_System_ProcessStatus", "Win32_System_Registry", "Win32_System_SystemInformation", "Win32_System_SystemServices", "Win32_System_Threading", "Win32_Security"] }

[dev-dependencies]
goblin = "0.9.3"
tempfile = { version = "3.3" }

[build-dependencies]
# If we use a newer version of cc, CI fails on alpine.
cc = "1.1.31"
