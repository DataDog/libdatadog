[package]
name = "datadog-trace-utils"
edition.workspace = true
version.workspace = true
rust-version.workspace = true
license.workspace = true
autobenches = false

[lib]
bench = false

[[bench]]
name = "main"
harness = false
path = "benches/main.rs"

[dependencies]
anyhow = "1.0"
hyper = { version = "1.6", features = ["http1", "client"] }
http-body-util = "0.1"

serde = { version = "1.0.145", features = ["derive"] }
prost = "0.13.5"
rmp-serde = "1.1.1"
log = "0.4"
serde_json = "1.0"
futures = { version = "0.3", default-features = false }
ddcommon = { path = "../ddcommon" }
datadog-trace-protobuf = { path = "../trace-protobuf" }
datadog-trace-normalization = { path = "../trace-normalization" }
tokio = { version = "1", features = ["macros", "rt-multi-thread"] }
rand = "0.8.5"
bytes = "1.6.0"
rmpv = { version = "1.3.0", default-features = false }
rmp = { version = "0.8.14", default-features = false }
tinybytes = { path = "../tinybytes", features = [
    "bytes_string",
    "serialization",
] }

# Proxy feature
hyper-http-proxy = { version = "1.1.0", default-features = false, features = [
    "rustls-tls-webpki-roots",
], optional = true }

# Compression feature
flate2 = { version = "1.0", optional = true }
zstd = { version = "0.13.3", default-features = false, optional = true }

# test-utils feature
cargo_metadata = { version = "0.18.1", optional = true }
# Dependency of cargo metadata, but 0.1.8 requires too new of a rust version.
cargo-platform = { version = "=0.1.7", optional = true }
testcontainers = { version = "0.22",features=["http_wait"], optional = true }
httpmock = { version = "0.7.0", optional = true }
urlencoding = { version = "2.1.3", optional = true }

[dev-dependencies]
bolero = "0.13"
criterion = "0.5.1"
httpmock = { version = "0.7.0" }
serde_json = "1.0"
tokio = { version = "1", features = ["macros", "rt-multi-thread"] }
datadog-trace-utils = { path = ".", features = ["test-utils"] }
tempfile = "3.3.0"

[features]
mini_agent = ["proxy", "compression", "ddcommon/use_webpki_roots"]
test-utils = [
    "hyper/server",
    "httpmock",
    "testcontainers",
    "cargo_metadata",
    "cargo-platform",
    "urlencoding",
]
proxy = ["hyper-http-proxy"]
compression = ["zstd", "flate2"]
# FIPS mode uses the FIPS-compliant cryptographic provider
fips = ["ddcommon/fips"]
