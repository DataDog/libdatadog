name: docker-build
on: workflow_dispatch

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.targets.outputs.matrix }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Create matrix from bake file
        id: targets
        run: |
          echo 'matrix<<EOF' >> $GITHUB_OUTPUT
          docker buildx bake all_builders --print | jq -r '.target | keys' >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
      -
        name: Show matrix
        run: |
          echo '${{ steps.targets.outputs.matrix }}'
  build-image:
    runs-on: ubuntu-latest
    needs:
      - setup-matrix
    strategy:
      fail-fast: false
      matrix:
        image_target: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/bake-action@v2
        with:
          targets: ${{ matrix.image_target }}
          push: true 
          set: |
            *.cache-from=type=registry,ref=ghcr.io/pawelchcki/libdatadog-ci:${{ matrix.image_target }}-cache
            *.cache-to=type=registry,ref=ghcr.io/datadog/libdatadog-ci:${{ matrix.image_target }}-cache
            *.output=type=image,name=ghcr.io/datadog/libdatadog-ci:${{ matrix.image_target }}
