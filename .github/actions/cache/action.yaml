name: '[rust] Cache' 
description: '[rust] Cache'

inputs:
  rust_version:
    default: "latest"
    required: false
  build_profile:
    default: "unspecified"
    required: false

runs:
  using: composite
  steps:
    - name: âš¡ Cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/git/db/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/bin/
          target/
        key: v2-${{ runner.os }}-cargo-${{ inputs.rust_version }}-${{ hashFiles('**/Cargo.toml', '**/Cargo.lock', '**/.cargo/config.toml') }}-${{ inputs.build_profile }}
        restore-keys: |
          v2-${{ runner.os }}-cargo-${{ inputs.rust_version }}-${{ hashFiles('**/Cargo.toml', '**/Cargo.lock', '**/.cargo/config.toml') }}-
# Cache will restore cargo and target data  if cache with matching OS and Rust Version as well as matching Cargo.toml files will be found. 
# previously we also restored cache for specific os and Rust Version but the target/ directory had only been growing over time - and we've reached the limits of GitHub Runners
# 
# Ideally cache should understand interdependencies between Cargo projects, and invalidate according - when a specific project is changed only.
